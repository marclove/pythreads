# SPDX-FileCopyrightText: 2024-present Marc Love <copyright@marclove.com>
#
# SPDX-License-Identifier: MIT

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pythreads"
dynamic = ["version"]
description = "A Python wrapper of Meta's Threads API"
readme = "README.md"
requires-python = ">=3.8"
license = { file = "LICENSE.txt" }
keywords = ["threads", "meta", "sdk"]
authors = [{ name = "Marc Love", email = "copyright@marclove.com" }]
maintainers = [{ name = "Marc Love", email = "copyright@marclove.com" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
  "aiohttp>=3.9,<3.11",
  "python-dotenv==1.0.*",
  "requests==2.32.*",
  "requests-oauthlib==2.0.*",
]

[project.urls]
Homepage = "https://github.com/marclove/pythreads"
Documentation = "https://github.com/marclove/pythreads#readme"
Repository = "https://github.com/marclove/pythreads"
Issues = "https://github.com/marclove/pythreads/issues"

[tool.hatch.version]
path = "src/pythreads/__about__.py"

[tool.hatch.build.targets.sdist]
exclude = [".github/*", ".env.template"]

### Environments ###

[tool.hatch.envs.default]
python = "3.12"

[tool.hatch.envs.docs]
extra-dependencies = ["sphinx", "furo", "myst-parser"]

[tool.hatch.envs.docs.scripts]
build = "cd docs && make html"

# Lint environment

[tool.hatch.envs.lint]
extra-dependencies = [
  "pyright>=1.1.371",
  "ruff",
  "pytest",
] # pytest needed for linting checks

[tool.hatch.envs.lint.scripts]
pyright-run = "pyright {args:.}"
ruff-run = "ruff check --fix {args:.}"
watch = "ruff check --watch {args:.}"
all = ["pyright-run", "ruff-run"]

# Code coverage environment

[tool.hatch.envs.coverage]
extra-dependencies = ["coverage[toml]", "pytest", "pytest-cov"]

[tool.hatch.envs.coverage.scripts]
all = 'pytest -m "not smoke" --cov-config=pyproject.toml --cov=src/pythreads'
generate = 'coverage html'
clean = "coverage erase"

# Test environments

[[tool.hatch.envs.test.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.test]
extra-dependencies = ["pytest"]

[tool.hatch.envs.test.scripts]
all = 'pytest -m "not smoke" {args:.}'
smoke = 'pytest -m "smoke" {args:.}'

[tool.hatch.envs.smoke-test]
extra-dependencies = ["pytest"]

[tool.hatch.envs.smoke-test.scripts]
all = 'pytest -m "smoke" {args:.}'


### Testing ###

[tool.pytest.ini_options]
addopts = "-s -v --strict-markers"
markers = [
  "smoke: makes real requests to the Threads API and requires real credentials",
]


### Coverage ###

[tool.coverage.run]
branch = true
parallel = true
omit = ["src/pythreads/__about__.py"]

[tool.coverage.paths]
pythreads = ["src/pythreads", "*/pythreads/src/pythreads"]
tests = ["tests", "*/pythreads/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]
